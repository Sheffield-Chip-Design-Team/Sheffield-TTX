name: test
on: [push, workflow_dispatch]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install iverilog
        shell: bash
        run: sudo apt-get update && sudo apt-get install -y iverilog

      # Set Python up and install cocotb
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python packages
        shell: bash
        run: pip install -r test/requirements.txt

      - name: Run tests
        run: |
          cd test
          make clean
          make
          # make will return success even if the test fails, so check for failure in the results.xml
          ! grep failure $(find . -type f -name '*_results.xml')    #
            
      - name: Find all results.xml files
        id: find_results
        run: |
          results=$(find test -type f -name '*_results.xml')
          {
            echo "results<<EOF"
            echo "$results"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Find all vcd files
        id: find_waveforms
        run: |
          vcds=$(find test -type f -name '*.vcd')
          {
            echo "vcds<<EOF"
            echo "$vcds"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Find all log files
        id: find_logs
        run: |
          logs=$(find test -type f -name '*.log')
          {
            echo "logs<<EOF"
            echo "$logs"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Find all vcd files
        id: find_waveforms
        run: |
          vcds=$(find test -type f -name '*.vcd')
          {
            echo "vcds<<EOF"
            echo "$vcds"
            echo "EOF"
          } >> $GITHUB_OUTPUT

      - name: Test Summary
        uses: test-summary/action@v2.3
        with:
          paths: "${{ steps.find_results.outputs.results }}"
        if: always()

      - name: Build Custom Test Summary
        if: always()
        run: |
          echo "## Test Run Details" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test | Seed | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------|------|--------|" >> $GITHUB_STEP_SUMMARY

          for f in $(find test -type f -name '*_results.xml'); do
            # extract first testcase name in file
            testname=$(xmllint --xpath 'string(//testcase/@name)' "$f" 2>/dev/null || echo "unknown")
            seed=$(grep -oP 'SEED=\K\d+' "$f" || echo "-")
            if grep -q "<failure" "$f"; then
              status="FAIL"
            else
              status="PASS"
            fi
            echo "| $testname | $seed | $status |" >> $GITHUB_STEP_SUMMARY
          done

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Errors from run_tests log" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          tail -n 100 latest.log >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

      - name: upload vcd
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-vcd
          path: |
            ${{ steps.find_waveforms.outputs.vcds }}
            ${{ steps.find_results.outputs.results }}
            ${{ steps.find_logs.outputs.logs }}

      - name: Report Test Status
        run: |
          if grep failure $(find . -type f -name '*_results.xml'); then
            echo "Test failure detected!"
            exit 1
          fi
